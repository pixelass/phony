type Query {
  getItems(pagination: Pagination): [Item]
  getItem(id: ID!): Item
  _getItemsMeta: MetaData
}

type Mutation {
  createItem(input: ItemInput!): Item
  updateItem(id: ID!, input: ItemUpdateInput!): Item
  deleteItem(id: ID!): Boolean
}

input Pagination {
	page: Int
	pageSize: Int
	sorting: Sorting
}

input Sorting {
	field: String!
	order: SortOrder!
}

enum SortOrder {
	asc
	desc
}

type MetaData {
	count: Int!
}

type Item {
	id: ID!
	name: String!
	created: String
	updated: String
	description: String
	price: Float
	stock: Int
}

input ItemInput {
	name: String!
	description: String
	price: Float
	stock: Int
}

input ItemUpdateInput {
	name: String
	description: String
	price: Float
	stock: Int
}